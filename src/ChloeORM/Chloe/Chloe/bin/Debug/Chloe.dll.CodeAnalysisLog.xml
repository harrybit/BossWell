<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="d:\vs\ver2015\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="14.0">
 <Targets>
  <Target Name="D:\Project_TY\20180502Rest\纯净版\src\ChloeORM\Chloe\Chloe\bin\Debug\Chloe.dll">
   <Modules>
    <Module Name="chloe.dll">
     <Namespaces>
      <Namespace Name="Chloe">
       <Types>
        <Type Name="DbContext" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2018-08-08 07:08:32Z" FixCategory="Breaking">
             <Issue Name="DisposeImplementation" Certainty="95" Level="Error" Path="D:\Project_TY\20180502Rest\纯净版\src\ChloeORM\Chloe\Chloe" File="DbContext.cs" Line="499">修改 'DbContext.Dispose()'，使它先调用 Dispose(true)，然后对当前对象实例(在 Visual Basic 中为“this”或“Me”)调用 GC.SuppressFinalize，最后返回。</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dispose(System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="_adoSession" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2018-08-08 07:08:32Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\Project_TY\20180502Rest\纯净版\src\ChloeORM\Chloe\Chloe" File="DbContext.cs" Line="509">'DbContext' 包含 IDisposable 类型的字段 'DbContext._adoSession': 'InternalAdoSession'。请更改 'DbContext' 的 Dispose 方法，使其针对该字段调用 Dispose 或 Close。</Issue>
            </Message>
            <Message Id="_session" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2018-08-08 07:08:32Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="D:\Project_TY\20180502Rest\纯净版\src\ChloeORM\Chloe\Chloe" File="DbContext.cs" Line="509">'DbContext' 包含 IDisposable 类型的字段 'DbContext._session': 'DbSession'。请更改 'DbContext' 的 Dispose 方法，使其针对该字段调用 Dispose 或 Close。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Chloe.Core">
       <Types>
        <Type Name="InternalAdoSession" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#PrepareCommand(System.String,Chloe.DbParam[],System.Data.CommandType,System.Collections.Generic.List`1&lt;Chloe.Core.OutputParameter&gt;&amp;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2018-08-08 07:08:32Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="D:\Project_TY\20180502Rest\纯净版\src\ChloeORM\Chloe\Chloe\Core" File="InternalAdoSession.cs" Line="264">传递给 'InternalAdoSession.PrepareCommand(string, DbParam[], CommandType, out List&lt;OutputParameter&gt;)' 中的 'IDbCommand.CommandText.set(string)' 的查询字符串可能包含以下变量 'cmdText'。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Chloe.Descriptors">
       <Types>
        <Type Name="EntityConstructorDescriptor" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetInstance(System.Reflection.ConstructorInfo)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotLockOnObjectsWithWeakIdentity" Category="Microsoft.Reliability" CheckId="CA2002" Status="Active" Created="2018-08-08 07:08:32Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="CriticalError" Path="D:\Project_TY\20180502Rest\纯净版\src\ChloeORM\Chloe\Chloe\Descriptors" File="EntityConstructorDescriptor.cs" Line="78">'EntityConstructorDescriptor.GetInstance(ConstructorInfo)' 锁定类型 'ConstructorInfo' 的引用。请使用对具有强标识的对象的锁定替换它。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TypeDescriptor" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetDescriptor(System.Type)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotLockOnObjectsWithWeakIdentity" Category="Microsoft.Reliability" CheckId="CA2002" Status="Active" Created="2018-08-08 07:08:32Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="CriticalError" Path="D:\Project_TY\20180502Rest\纯净版\src\ChloeORM\Chloe\Chloe\Descriptors" File="TypeDescriptor.cs" Line="225">'TypeDescriptor.GetDescriptor(Type)' 锁定类型 'Type' 的引用。请使用对具有强标识的对象的锁定替换它。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Chloe.Mapper">
       <Types>
        <Type Name="EntityConstructor" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetInstance(System.Reflection.ConstructorInfo)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotLockOnObjectsWithWeakIdentity" Category="Microsoft.Reliability" CheckId="CA2002" Status="Active" Created="2018-08-08 07:08:32Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="CriticalError" Path="D:\Project_TY\20180502Rest\纯净版\src\ChloeORM\Chloe\Chloe\Mapper" File="EntityConstructor.cs" Line="47">'EntityConstructor.GetInstance(ConstructorInfo)' 锁定类型 'ConstructorInfo' 的引用。请使用对具有强标识的对象的锁定替换它。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="EntityMemberMapper" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetInstance(System.Type)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotLockOnObjectsWithWeakIdentity" Category="Microsoft.Reliability" CheckId="CA2002" Status="Active" Created="2018-08-08 07:08:32Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="CriticalError" Path="D:\Project_TY\20180502Rest\纯净版\src\ChloeORM\Chloe\Chloe\Mapper" File="EntityMemberMapper.cs" Line="113">'EntityMemberMapper.GetInstance(Type)' 锁定类型 'Type' 的引用。请使用对具有强标识的对象的锁定替换它。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MappingTypeConstructor" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetInstance(System.Type)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotLockOnObjectsWithWeakIdentity" Category="Microsoft.Reliability" CheckId="CA2002" Status="Active" Created="2018-08-08 07:08:32Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="CriticalError" Path="D:\Project_TY\20180502Rest\纯净版\src\ChloeORM\Chloe\Chloe\Mapper" File="MappingTypeConstructor.cs" Line="43">'MappingTypeConstructor.GetInstance(Type)' 锁定类型 'Type' 的引用。请使用对具有强标识的对象的锁定替换它。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Chloe.Query.Internals">
       <Types>
        <Type Name="InternalSqlQuery`1+QueryEnumerator" Kind="Struct" Accessibility="Private" ExternallyVisible="False">
         <Members>
          <Member Name="#GetObjectActivator(System.Type,System.Data.IDataReader)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotLockOnObjectsWithWeakIdentity" Category="Microsoft.Reliability" CheckId="CA2002" Status="Active" Created="2018-08-08 07:08:32Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="CriticalError" Path="D:\Project_TY\20180502Rest\纯净版\src\ChloeORM\Chloe\Chloe\Query\Internals" File="InternalSqlQuery.cs" Line="161">'InternalSqlQuery&lt;T&gt;.QueryEnumerator.GetObjectActivator(Type, IDataReader)' 锁定类型 'Type' 的引用。请使用对具有强标识的对象的锁定替换它。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Chloe.Query.Visitors">
       <Types>
        <Type Name="JoinQueryExpressionVisitor" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#Visit(Chloe.Query.QueryExpressions.QueryExpression)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotHideBaseClassMethods" Category="Microsoft.Design" CheckId="CA1061" Status="Active" Created="2018-08-08 07:08:32Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning" Path="D:\Project_TY\20180502Rest\纯净版\src\ChloeORM\Chloe\Chloe\Query\Visitors" File="JoinQueryExpressionVisitor.cs" Line="120">更改或移除 'JoinQueryExpressionVisitor.Visit(QueryExpression)'，因为它会隐藏更具体的基类方法: 'QueryExpressionVisitor&lt;JoinQueryResult&gt;.Visit(AggregateQueryExpression)'。</Issue>
             <Issue Certainty="95" Level="CriticalWarning" Path="D:\Project_TY\20180502Rest\纯净版\src\ChloeORM\Chloe\Chloe\Query\Visitors" File="JoinQueryExpressionVisitor.cs" Line="120">更改或移除 'JoinQueryExpressionVisitor.Visit(QueryExpression)'，因为它会隐藏更具体的基类方法: 'QueryExpressionVisitor&lt;JoinQueryResult&gt;.Visit(DistinctExpression)'。</Issue>
             <Issue Certainty="95" Level="CriticalWarning" Path="D:\Project_TY\20180502Rest\纯净版\src\ChloeORM\Chloe\Chloe\Query\Visitors" File="JoinQueryExpressionVisitor.cs" Line="120">更改或移除 'JoinQueryExpressionVisitor.Visit(QueryExpression)'，因为它会隐藏更具体的基类方法: 'QueryExpressionVisitor&lt;JoinQueryResult&gt;.Visit(GroupingQueryExpression)'。</Issue>
             <Issue Certainty="95" Level="CriticalWarning" Path="D:\Project_TY\20180502Rest\纯净版\src\ChloeORM\Chloe\Chloe\Query\Visitors" File="JoinQueryExpressionVisitor.cs" Line="120">更改或移除 'JoinQueryExpressionVisitor.Visit(QueryExpression)'，因为它会隐藏更具体的基类方法: 'QueryExpressionVisitor&lt;JoinQueryResult&gt;.Visit(JoinQueryExpression)'。</Issue>
             <Issue Certainty="95" Level="CriticalWarning" Path="D:\Project_TY\20180502Rest\纯净版\src\ChloeORM\Chloe\Chloe\Query\Visitors" File="JoinQueryExpressionVisitor.cs" Line="120">更改或移除 'JoinQueryExpressionVisitor.Visit(QueryExpression)'，因为它会隐藏更具体的基类方法: 'QueryExpressionVisitor&lt;JoinQueryResult&gt;.Visit(OrderExpression)'。</Issue>
             <Issue Certainty="95" Level="CriticalWarning" Path="D:\Project_TY\20180502Rest\纯净版\src\ChloeORM\Chloe\Chloe\Query\Visitors" File="JoinQueryExpressionVisitor.cs" Line="120">更改或移除 'JoinQueryExpressionVisitor.Visit(QueryExpression)'，因为它会隐藏更具体的基类方法: 'QueryExpressionVisitor&lt;JoinQueryResult&gt;.Visit(RootQueryExpression)'。</Issue>
             <Issue Certainty="95" Level="CriticalWarning" Path="D:\Project_TY\20180502Rest\纯净版\src\ChloeORM\Chloe\Chloe\Query\Visitors" File="JoinQueryExpressionVisitor.cs" Line="120">更改或移除 'JoinQueryExpressionVisitor.Visit(QueryExpression)'，因为它会隐藏更具体的基类方法: 'QueryExpressionVisitor&lt;JoinQueryResult&gt;.Visit(SelectExpression)'。</Issue>
             <Issue Certainty="95" Level="CriticalWarning" Path="D:\Project_TY\20180502Rest\纯净版\src\ChloeORM\Chloe\Chloe\Query\Visitors" File="JoinQueryExpressionVisitor.cs" Line="120">更改或移除 'JoinQueryExpressionVisitor.Visit(QueryExpression)'，因为它会隐藏更具体的基类方法: 'QueryExpressionVisitor&lt;JoinQueryResult&gt;.Visit(SkipExpression)'。</Issue>
             <Issue Certainty="95" Level="CriticalWarning" Path="D:\Project_TY\20180502Rest\纯净版\src\ChloeORM\Chloe\Chloe\Query\Visitors" File="JoinQueryExpressionVisitor.cs" Line="120">更改或移除 'JoinQueryExpressionVisitor.Visit(QueryExpression)'，因为它会隐藏更具体的基类方法: 'QueryExpressionVisitor&lt;JoinQueryResult&gt;.Visit(TakeExpression)'。</Issue>
             <Issue Certainty="95" Level="CriticalWarning" Path="D:\Project_TY\20180502Rest\纯净版\src\ChloeORM\Chloe\Chloe\Query\Visitors" File="JoinQueryExpressionVisitor.cs" Line="120">更改或移除 'JoinQueryExpressionVisitor.Visit(QueryExpression)'，因为它会隐藏更具体的基类方法: 'QueryExpressionVisitor&lt;JoinQueryResult&gt;.Visit(WhereExpression)'。</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213">
   <Name>应释放可释放的字段</Name>
   <Description>如果实现了 IDisposable 的类型拥有同样实现 IDisposable 的字段，则封装类型的 Dispose() 实现应对每个可释放字段调用 Dispose()。</Description>
   <Resolution Name="Default">{0} 包含 IDisposable 类型的字段 {1}: {2}。请更改 {0} 的 Dispose 方法，使其针对该字段调用 Dispose 或 Close。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182328.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotHideBaseClassMethods" Category="Microsoft.Design" CheckId="CA1061">
   <Name>不要隐藏基类方法</Name>
   <Description>如果在派生类中定义一个方法，该方法与在基类中定义的方法同名，但参数的类型化较弱，则将妨碍对基类中定义的方法的访问。</Description>
   <Resolution Name="Default">更改或移除 {0}，因为它会隐藏更具体的基类方法: {1}。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182143.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalWarning</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotLockOnObjectsWithWeakIdentity" Category="Microsoft.Reliability" CheckId="CA2002">
   <Name>不要锁定具有弱标识的对象</Name>
   <Description>不要锁定可能跨 AppDomain 抽取的对象或没有强标识的对象。</Description>
   <Resolution Name="Default">{0} 锁定类型 {1} 的引用。请使用对具有强标识的对象的锁定替换它。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182290.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalError</MessageLevel>
   <File Name="reliabilityrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063">
   <Name>正确实现 IDisposable</Name>
   <Description>所有 IDisposable 类型都应正确实现 Dispose 模式。</Description>
   <Resolution Name="DisposeImplementation">修改 {0}，使它先调用 Dispose(true)，然后对当前对象实例(在 Visual Basic 中为“this”或“Me”)调用 GC.SuppressFinalize，最后返回。</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms244737.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="检查 SQL 查询是否存在安全漏洞" Category="Microsoft.Security" CheckId="CA2100">
   <Name>检查 SQL 查询是否存在安全漏洞</Name>
   <Description>通过用户输入生成的 SQL 命令字符串容易受到 SQL 注入式攻击。Microsoft SQL Server 和其他数据库服务器支持存储过程和参数化 SQL 查询，这将降低受到注入式攻击的风险。</Description>
   <Resolution Name="WithNonLiterals">传递给 {1} 中的 {0} 的查询字符串可能包含以下变量 {2}。如果其中的任意变量可能来自用户输入，请考虑使用存储过程或参数化 SQL 查询，而不是通过字符串串联来生成查询。</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182310.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="14.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">类别</String>
  <String Key="Certainty">确定性</String>
  <String Key="CollapseAll">全部折叠</String>
  <String Key="CheckId">检查 ID</String>
  <String Key="Error">错误</String>
  <String Key="Errors">错误</String>
  <String Key="ExpandAll">全部展开</String>
  <String Key="Help">帮助</String>
  <String Key="Line">行</String>
  <String Key="Messages">消息</String>
  <String Key="LocationNotStoredInPdb">[位置未存储在 Pdb 中]</String>
  <String Key="Project">项目</String>
  <String Key="Resolution">解析</String>
  <String Key="Rule">规则</String>
  <String Key="RuleFile">规则文件</String>
  <String Key="RuleDescription">规则说明</String>
  <String Key="Source">源</String>
  <String Key="Status">状态</String>
  <String Key="Target">目标</String>
  <String Key="Warning">警告</String>
  <String Key="Warnings">警告</String>
  <String Key="ReportTitle">代码分析报告</String>
 </Localized>
</FxCopReport>
